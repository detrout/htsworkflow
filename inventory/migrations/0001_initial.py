# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-07 21:20
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('experiments', '0005_add_samstatsrun'),
        ('samples', '0004_auto_20160407_1420'),
        ('bcmagic', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(blank=True, editable=False, help_text='Leave blank for automatic UUID generation', max_length=32, unique=True)),
                ('barcode_id', models.CharField(blank=True, max_length=256, null=True)),
                ('force_use_uuid', models.BooleanField(default=False)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_id', models.CharField(blank=True, max_length=256, null=True)),
                ('part_number', models.CharField(blank=True, max_length=256, null=True)),
                ('lot_number', models.CharField(blank=True, max_length=256, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('qty_purchased', models.IntegerField(default=1)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('warranty_months', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Item Info',
            },
        ),
        migrations.CreateModel(
            name='ItemStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Item Status',
            },
        ),
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('location_description', models.TextField()),
                ('uuid', models.CharField(blank=True, editable=False, help_text='Leave blank for automatic UUID generation', max_length=32)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LongTermStorage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('flowcell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.FlowCell')),
                ('libraries', models.ManyToManyField(to='samples.Library')),
                ('storage_devices', models.ManyToManyField(to='inventory.Item')),
            ],
            options={
                'verbose_name_plural': 'Long Term Storage',
            },
        ),
        migrations.CreateModel(
            name='PrinterTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default', models.BooleanField(default=False)),
                ('template', models.TextField()),
                ('item_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.ItemType')),
                ('printer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bcmagic.Printer')),
            ],
        ),
        migrations.CreateModel(
            name='ReagentFlowcell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('flowcell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.FlowCell')),
                ('reagent', models.ManyToManyField(to='inventory.Item')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReagentLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='samples.Library')),
                ('reagent', models.ManyToManyField(to='inventory.Item')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='iteminfo',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Vendor'),
        ),
        migrations.AddField(
            model_name='item',
            name='item_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.ItemInfo'),
        ),
        migrations.AddField(
            model_name='item',
            name='item_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.ItemType'),
        ),
        migrations.AddField(
            model_name='item',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Location'),
        ),
        migrations.AddField(
            model_name='item',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.ItemStatus'),
        ),
    ]
